#!/bin/sh

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

RUN_AS="pyload"
RUN_GROUP="users"

SERVICE_NAME="pyload"

PYLOAD_HOME_DIR="/home/pyload/.pyload"
PYLOAD_CONFIG="${PYLOAD_HOME_DIR}/pyload.conf"

PYLOAD_PID="/var/run/pyload/pyload-8080.pid"

PYLOAD_USR_DB="/usr/share/pyload/files.db"
PYLOAD_HOME_DB="${PYLOAD_HOME_DIR}/files.db"

PYLOAD_CLI="/usr/bin/pyLoadCli"
PYLOAD_CORE="/usr/bin/pyLoadCore"

PYLOAD_CLI_USR="/usr/share/pyload/pyLoadCli.py"
PYLOAD_CORE_USR="/usr/share/pyload/pyLoadCore.py"

case "$1" in
configure)
    if ! grep -q "${RUN_AS}:" /etc/passwd; then
        echo "Adding ${RUN_AS} user..."
        useradd --create-home --groups ${RUN_GROUP} --no-user-group --shell /usr/sbin/nologin ${RUN_AS}
    else
        echo "${RUN_AS} user already exists."
    fi

    if [ -f "${PYLOAD_PID}" ]; then
        PID=$(cat ${PYLOAD_PID});
        kill -0 $PID 2>/dev/null;
        if [ $? -eq 0 ]; then
            kill -9 $PID;
            rm -Rf "/var/run/${SERVICE_NAME}"
        fi
    fi

    if [ ! -f "${PYLOAD_CONFIG}" ]; then
        mkdir -p "${PYLOAD_HOME_DIR}"

        cat <<EOF > ${PYLOAD_CONFIG}
version: 1

remote - "Remote":
        bool nolocalauth : "No authentication on local connections" = True
        bool activated : "Activated" = True
        int port : "Port" = 7227
        ip listenaddr : "Adress" = 0.0.0.0

log - "Log":
        int log_size : "Size in kb" = 100
        folder log_folder : "Folder" = Logs
        bool file_log : "File Log" = True
        int log_count : "Count" = 5
        bool log_rotate : "Log Rotate" = True

permission - "Permissions":
        str group : "Groupname" = users
        bool change_dl : "Change Group and User of Downloads" = False
        bool change_file : "Change file mode of downloads" = False
        str user : "Username" = pyload
        str file : "Filemode for Downloads" = 0777
        bool change_group : "Change group of running process" = False
        str folder : "Folder Permission mode" = 0777
        bool change_user : "Change user of running process" = False

general - "General":
        en;de;fr;it;es;nl;sv;ru;pl;cs;sr;pt_BR language : "Language" = en
        folder download_folder : "Download Folder" = Downloads
        bool checksum : "Use Checksum" = False
        bool folder_per_package : "Create folder for each package" = True
        bool debug_mode : "Debug Mode" = False
        int min_free_space : "Min Free Space (MB)" = 200
        int renice : "CPU Priority" = 0

ssl - "SSL":
        file cert : "SSL Certificate" = ssl.crt
        bool activated : "Activated" = False
        file key : "SSL Key" = ssl.key

webinterface - "Webinterface":
        str template : "Template" = default
        bool activated : "Activated" = True
        str prefix : "Path Prefix" =
        builtin;threaded;fastcgi;lightweight server : "Server" = threaded
        ip host : "IP" = 0.0.0.0
        bool https : "Use HTTPS" = False
        int port : "Port" = 8888

proxy - "Proxy":
        str username : "Username" = None
        bool proxy : "Use Proxy" = False
        str address : "Address" = "localhost"
        password password : "Password" = None
        http;socks4;socks5 type : "Protocol" = http
        int port : "Port" = 7070

reconnect - "Reconnect":
        time endTime : "End" = 0:00
        bool activated : "Use Reconnect" = True
        str method : "Method" = ./reconnect.sh
        time startTime : "Start" = 0:00

download - "Download":
        int max_downloads : "Max Parallel Downloads" = 3
        bool limit_speed : "Limit Download Speed" = False
        str interface : "Download interface to bind (ip or Name)" = None
        bool skip_existing : "Skip already existing files" = False
        int max_speed : "Max Download Speed in kb/s" = -1
        bool ipv6 : "Allow IPv6" = False
        int chunks : "Max connections for one download" = 3

downloadTime - "Download Time":
        time start : "Start" = 0:00
        time end : "End" = 0:00
EOF

    fi

    if [ ! -f "${PYLOAD_HOME_DB}" ]; then
        cp "${PYLOAD_USR_DB}" "${PYLOAD_HOME_DB}"
        chown ${RUN_AS}:${RUN_GROUP} "${PYLOAD_USR_DB}"
        chmod 755 "${PYLOAD_USR_DB}"
    fi

    rm -Rf "${PYLOAD_USR_DB}"
    chown ${RUN_AS}:${RUN_GROUP} "${PYLOAD_CLI}"
    chown ${RUN_AS}:${RUN_GROUP} "${PYLOAD_CORE}"
    chown ${RUN_AS}:${RUN_GROUP} "${PYLOAD_HOME_DIR}" -R
    chown ${RUN_AS}:${RUN_GROUP} /usr/share/pyload -R
    chmod 775 "${PYLOAD_CLI}"
    chmod 775 "${PYLOAD_CORE}"
    chmod 755 "${PYLOAD_CORE_USR}"
    chmod 755 "${PYLOAD_CLI_USR}"

    if ! omv_config_exists "/config/services/${SERVICE_NAME}"; then
        echo "Initial configuration."
        object="<enable>0</enable>"
        omv_config_add_element "/config/services" "${SERVICE_NAME}" "${object}" true
    fi

    echo "Default username is:  admin"
    echo "Default password is:  openmediavault"

    omv_install_fixperms

    # Activate package triggers. These triggers are only set during the
    # package installation.
    dpkg-trigger update-fixperms
    dpkg-trigger update-locale

    ;;
abort-upgrade|abort-remove|abort-deconfigure)
    ;;
*)
    echo "postinst called with unknown argument" >&2
    exit 1
    ;;
esac

exit 0
